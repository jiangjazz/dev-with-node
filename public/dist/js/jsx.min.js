(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/*自定义模块*/
//基础模块
require('./module/index.jsx');

require('./module/demo1.jsx');
require('./module/demo2.jsx');
require('./module/demo3.jsx');

},{"./module/demo1.jsx":2,"./module/demo2.jsx":3,"./module/demo3.jsx":4,"./module/index.jsx":5}],2:[function(require,module,exports){
var page = function(){
    var MyComponent = React.createClass({displayName: "MyComponent",
        getDefaultProps: function(){
            return {
                'name': 'Json',
                'type': false
            }
        },
        getInitialState: function(){
            var firstSetName = this.props.name === 'Json'? '是': '不是';
            return{
                'firstSetName': firstSetName,
                'opacity': 1.0
            }
        },
        componentWillMount: function(){
            this.setState({'name': 'Jazz'});
        },
        componentDidMount: function(){
            //alert('渲染成功');
            //console.log(ReactDOM.findDOMNode(this.refs.h1));  //获取DOM节点
            console.log(this.refs.h1);  //获取DOM节点
            this.timer = setInterval(function(){
                var opacity = this.state.opacity;
                opacity -=.05;
                if(opacity < .1){
                    opacity = 1.0;
                }
                this.setState({'opacity': opacity});
            }.bind(this),100);
        },
        shouldComponentUpdate: function(){
            if(this.state.opacity <.3){
                return false;
            }else{
                return true;
            }
        },
        render: function(){
            return (
                React.createElement("div", null, 
                    React.createElement("h1", {ref: "h1"}, "姓名:", this.state.name), 
                    React.createElement("p", null, "是不是初始化:", this.state.firstSetName), 
                    React.createElement("p", {style: {opacity: this.state.opacity}}, "123123123")
                )
                );
        }
    });

    ReactDOM.render(
        React.createElement(MyComponent, null),
        document.querySelector('.content1')
        );
};







//依据模块加载
document.querySelector('.demo-module') && page();

},{}],3:[function(require,module,exports){
//搜索功能组件的演示

var page = function(){

    //参数
    var PRODUCTS = [
        {category: 'Sporting Goods', price: '$49.99', stocked: true, name: 'Football'},
        {category: 'Sporting Goods', price: '$9.99', stocked: true, name: 'Baseball'},
        {category: 'Sporting Goods', price: '$29.99', stocked: false, name: 'Basketball'},
        {category: 'Electronics', price: '$99.99', stocked: true, name: 'iPod Touch'},
        {category: 'Electronics', price: '$399.99', stocked: false, name: 'iPhone 5'},
        {category: 'Electronics', price: '$199.99', stocked: true, name: 'Nexus 7'}
    ];
    //具体产品
    var Product = React.createClass({displayName: "Product",
        render: function(){
            return (
                React.createElement("div", {className: "products"}, 
                    React.createElement("span", null, this.props.product.name), " ", 
                    React.createElement("span", null, this.props.product.price)
                )
                );
        }
    });
    //具体分类数据的呈现
    var ResultGroup = React.createClass({displayName: "ResultGroup",
        getDefaultProps: function(){
            return {
                'searchName': 'search'
            };
        },
        render: function(){
            var len = this.props.products.length,
                i = 0,
                row = [];
            while(i<len){
                row.push([React.createElement(Product, {product: this.props.products[i]})]);
                i++;
            };
            return (
                React.createElement("div", {className: "resultGroup"}, 
                    React.createElement("h4", {className: "category"}, this.props.products[0].category), 
                    row
                )
                );
        }
    });
    //搜索框
    var SearchBar = React.createClass({displayName: "SearchBar",
        getDefaultProps: function(){
            return {
                'searchName': 'search',
                'promptMsg': '请输入搜索关键字'
            };
        },
        inpChange: function(){
            var input = this.refs.searchInp,
                state = {
                    'filterText': input.value
                };
            this.props.onUserInput(state);
        },
        render: function(){
            return (
                React.createElement("div", {className: "searchBar"}, 
                    React.createElement("input", {
                        name: this.props.searchName, 
                        type: "search", 
                        placeholder: "请输入搜索关键字", 
                        ref: "searchInp", 
                        onChange: this.inpChange, 
                        value: this.props.filterText})
                )
                );
        }
    });
    //搜索组件
    var SearchGroup = React.createClass({displayName: "SearchGroup",
        getInitialState: function(){
            return {
                'filterText': '',
                'inStockOnly': false
            };
        },
        handleUserInput: function(state){
            this.setState({
                'filterText': state.filterText
            });
        },
        render: function(){
            var categoryObj = {},
                row = [],
                filterText = this.state.filterText,
                pattern = new RegExp(filterText, 'i'),
                inStockOnly = this.state.inStockOnly;

            //console.log(this.state.filterText);
            //按category分类,获得新的分组数据
            this.props.products.forEach(function(product) {
                if(!pattern.test(product.name)){
                    return;
                }
                if (!categoryObj[product.category]) {
                    categoryObj[product.category] = [];
                }
                categoryObj[product.category].push(product);
            });
            for(var obj in categoryObj){
                if(inStockOnly && categoryObj[obj].stocked){}
                row.push(React.createElement(ResultGroup, {key: obj, products: categoryObj[obj]}));
            }
            return (
                React.createElement("div", {className: this.props.class}, 
                    React.createElement(SearchBar, {
                        filterText: filterText, 
                        inStockOnly: inStockOnly, 
                        onUserInput: this.handleUserInput}), 
                    row
                )
                );
        }
    });
    //调用
    ReactDOM.render(
        React.createElement(SearchGroup, {class: "component-search", products: PRODUCTS}),
        document.querySelector('.content1')
        );
};



//依据模块加载
document.querySelector('.demo2-module') && page();

},{}],4:[function(require,module,exports){

var page = function(){
    //基础组件块
    var MyComponent = React.createClass({displayName: "MyComponent",
        render: function(){
            return (
                React.createElement("div", null, "MyComponent")
                );
        }
    });

    //调用
    ReactDOM.render(
        React.createElement(MyComponent, null),
        document.querySelector('.content1')
        );
};


//依据模块加载
document.querySelector('.demo3-module') && page();

},{}],5:[function(require,module,exports){
//组件
/*var HelloMessage = React.createClass({
    getDefaultProps: function(){
        return {
            content: 'Nice to meet you'
        }
    },
    propTypes: {
        title: React.PropTypes.string.isRequired
    },
    render: function(){
        return <div>
        <h1>{this.props.title}</h1>
        <div>{this.props.content}</div>
        </div>;
    }
});

var MyComponent = React.createClass({
    handleClick: function(){
        var value = this.refs.myTextInp.value;
        console.log(value);
    },
    handleCut: function(){
        var value = this.refs.myTextInp.value;
        console.log('cut');
    },
    handleCopy: function(){
        var value = this.refs.myTextInp.value;
        console.log('copy');
    },
    handlePaste: function(){
        var value = this.refs.myTextInp.value;
        console.log('paste');
    },
    render: function(){
        return (
            <div>
                <input type = "text" ref = "myTextInp" onCut = {this.handleCut} onPaste = {this.handlePaste} onCopy = {this.handleCopy}/>
                <input type = "button" value = "输出input的值" onClick = {this.handleClick} />
            </div>
            );
    }
});*/

/*var MyModule = React.createClass({
    clickHandle: function(){
        var value = this.refs.inp.value;
        console.log(value);
    },
    render: function(){
        return (<div>
                <input type="text" ref="inp" onClick={this.clickHandle} />
                <p>this.props.title</p>
            </div>);
    }
});*/


//参数
/*var data = 'Welcome!';*/

//执行
/*ReactDOM.render(
        <HelloMessage title={data} />,
        document.querySelector('.content1')
      );
*/
/*ReactDOM.render(
        <MyComponent />,
        document.querySelector('.content2')
      );
*/
/*ReactDOM.render(
    <MyModule title="123"/>,
    document.querySelector('.content2')
    );
*/

/*var LikeButton = React.createClass({
    getInitialState: function(){
        return {
            liked: false,
            name: 'Jazz'
        };
    },
    handleClick: function(event){
        this.setState({liked: !this.state.liked});
        console.log(this.state);
    },
    render: function(){
        var text = this.state.liked ? 'like' : 'haven\'t liked';
        return (
            <p onClick={this.handleClick}>
                You {text} this. Click to toggle.
            </p>
            );
    }
});

ReactDOM.render(
    <LikeButton />,
    document.querySelector('.content1')
    );*/

/*var Hello = React.createClass({
    getInitialState: function(){
        return {
            opacity: 1.0
        };
    },
    componentDidMount: function(){
        this.timer = setInterval(function(){
            var opacity = this.state.opacity;
            opacity -= .05;
            if(opacity < .1){
                opacity = 1.0;
            }
            this.setState({
                opacity: opacity
            });
        }.bind(this),100)
    },
    componentWillUpdate: function(){
        console.log(1);
    },
    componentWillUnmount: function(){
        console.log(2);
    },
    shouldComponentUpdate: function(obj1, obj2){
        if(obj2.opacity > .5){
            //console.log(3);
            return true;
        }else{
            //console.log(4);
            return false;
        }
    },
    render: function(){
        return (
            <div style={{opacity: this.state.opacity}}>
                Hello {this.props.name}
            </div>
            );
    }
});

ReactDOM.render(
    <Hello name="jazz" />,
    document.querySelector('.content1')
    );*/

/*var UserGist = React.createClass({
    getInitialState: function(){
        return {
            userName: '',
            lastGistUrl: ''
        };
    },
    componentDidMount: function(){
        var times = (new Date()).getTime().toString();
        $.get('actions/get.php?t='+times, {id: 12312}, function(result){
            console.log(result);
            var lastGist = result[0];
            if(this.isMounted()){
                this.setState({
                    userName: lastGist.owner.login,
                    lastGistUrl: lastGist.html_url
                });
            }
        }.bind(this));
    },
    render: function(){
        return (
            <div>
                {this.state.username}s last gist is
                <a href={this.state.lastGistUrl}>here</a>.
            </div>
            );
    }
});


ReactDOM.render(
     <UserGist source="actions/get.php" />,
    document.querySelector('.content1')
    );*/

/*var RepoList = React.createClass({
    getInitialState: function() {
        return {
            loading: true,
            error: null,
            data: null
        };
    },
  componentDidMount() {
    this.props.promise.then(
      value => this.setState({loading: false, data: value}),
      error => this.setState({loading: false, error: error}));
  },
  render: function() {
    if (this.state.loading) {
      return <span>Loading...</span>;
    }
    else if (this.state.error !== null) {
      return <span>Error: {this.state.error.message}</span>;
    }
    else {
      var repos = this.state.data.items;
      var repoList = repos.map(function (repo) {
        return (
          <li>
            <a href={repo.html_url}>{repo.name}</a> ({repo.stargazers_count} stars) <br/> {repo.description}
          </li>
        );
      });
      return (
        <main>
          <h1>Most Popular JavaScript Projects in Github</h1>
          <ol>{repoList}</ol>
        </main>
      );
    }
  }
});*/



},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
